name: Continuous Integration + Deployment

on:
  push:
    branches:
      - "master"
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

env:
  DOTNET_NOLOGO: "true"
  CONFIGURATION: Release
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "true"
  DOTNET_SYSTEM_GLOBALIZATION_PREDEFINED_CULTURES_ONLY: "false"

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifacts-location: ${{ steps.build.outputs.artifacts-location }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_SHARED_ROLE }}
          aws-region: us-east-1

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install CDK
        run: npm install --global cdk

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3

      - name: Display .NET Info
        run: dotnet --info

      - name: Restore Tools
        run: dotnet tool restore

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get Version
        id: get-version
        run: |
          echo "version=$(dotnet nbgv get-version --variable NuGetPackageVersion)" >> $GITHUB_OUTPUT

      - name: Build
        id: build
        run: |
          dotnet run \
            --verbosity minimal \
            --project cicd/Cicd.BuildDriver/Cicd.BuildDriver.csproj -- \
            --version ${{ steps.get-version.outputs.version }} \
            --push ${{ github.ref == 'refs/heads/master' }}

      - uses: ncipollo/release-action@v1
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          commit: ${{ github.sha }}
          token: ${{ secrets.GH_TOKEN }}
          tag: v${{ steps.get-version.outputs.version }}
          generateReleaseNotes: true
